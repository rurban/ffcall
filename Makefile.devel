# This is the developer's -*-Makefile-*-, not the user's makefile.
# Do not use it unless you know exactly what you do!

SHELL = /bin/sh
MAKE = make

all : aclocal.m4 configures \
	avcall/avcall.h.msvc avcall/avcall.h.mingw32 \
	avcall/avcall-i386-msvc.c avcall/avcall-i386-mingw32.c \
	vacall/config.h.msvc vacall/config.h.mingw32 vacall/vacall.h.msvc \
	vacall/vacall.h.mingw32 vacall/vacall-i386-msvc.c \
	vacall/vacall-i386-mingw32.c \
	trampoline/config.h.msvc trampoline/config.h.mingw32 \
	callback/vacall_r/config.h.msvc callback/vacall_r/config.h.mingw32 \
	callback/vacall_r/vacall_r.h.msvc \
	callback/vacall_r/vacall_r.h.mingw32 \
	callback/vacall_r/vacall-i386-msvc.c \
	callback/trampoline_r/config.h.msvc \
	callback/trampoline_r/config.h.mingw32 \
	build-aux/config.guess build-aux/config.sub build-aux/ltmain.sh \
	build-aux/install-sh

CONFIGURES = configure avcall/configure vacall/configure trampoline/configure callback/configure callback/vacall_r/configure callback/trampoline_r/configure
CONFIGURES_IN = configure.in avcall/configure.in vacall/configure.in trampoline/configure.in callback/configure.in callback/vacall_r/configure.in callback/trampoline_r/configure.in

CLISP_DIR = ..

build-aux/% : $(CLISP_DIR)/src/build-aux/% ; cp -p $< $@-t && mv $@-t $@

m4/general.m4 : $(CLISP_DIR)/src/m4/general.m4 ; cp -p $< $@-t && mv $@-t $@
m4/proto.m4 : $(CLISP_DIR)/src/m4/proto.m4 ; cp -p $< $@-t && mv $@-t $@
m4/cc-gcc.m4 : $(CLISP_DIR)/src/m4/cc-gcc.m4 ; cp -p $< $@-t && mv $@-t $@
m4/as-underscore.m4 : $(CLISP_DIR)/src/m4/as-underscore.m4 ; cp -p $< $@-t && mv $@-t $@
m4/nocrash.m4 : $(CLISP_DIR)/src/m4/nocrash.m4 ; cp -p $< $@-t && mv $@-t $@
m4/longlong.m4 : $(CLISP_DIR)/src/glm4/longlong.m4 ; cp -p $< $@-t && mv $@-t $@
m4/cc-void.m4 : $(CLISP_DIR)/src/m4/cc-void.m4 ; cp -p $< $@-t && mv $@-t $@
m4/getpagesize.m4 : $(CLISP_DIR)/src/m4/getpagesize.m4 ; cp -p $< $@-t && mv $@-t $@
m4/mach-vm.m4 : $(CLISP_DIR)/src/m4/mach-vm.m4 ; cp -p $< $@-t && mv $@-t $@
m4/openflags.m4 : $(CLISP_DIR)/src/m4/openflags.m4 ; cp -p $< $@-t && mv $@-t $@
m4/mmap.m4 : $(CLISP_DIR)/src/m4/mmap.m4 ; cp -p $< $@-t && mv $@-t $@
m4/mprotect.m4 : $(CLISP_DIR)/src/m4/mprotect.m4 ; cp -p $< $@-t && mv $@-t $@
m4/shm.m4 : $(CLISP_DIR)/src/m4/shm.m4 ; cp -p $< $@-t && mv $@-t $@

aclocal.m4 : $(wildcard m4/*.m4)
	{ echo 'AC_INIT'; cat $(CONFIGURES_IN) | grep -v '\(AC_INIT(\|AC_OUTPUT(\|AC_CONFIG_HEADER(\)'; } > configure.ac
	mv configure.in configure.in-save
	aclocal --output=aclocal.m4 -I `pwd`/m4
	mv configure.in-save configure.in
	rm -f configure.ac

configures : $(CONFIGURES)

AUTOCONF_FILES = aclocal.m4
AUTOCONF = autoconf
AUTOCONF_CACHE = autom4te.cache

configure : configure.in $(AUTOCONF_FILES)
	$(AUTOCONF) --include=.

avcall/configure : avcall/configure.in $(AUTOCONF_FILES)
	cd avcall ; $(AUTOCONF) --include=../

vacall/configure : vacall/configure.in $(AUTOCONF_FILES)
	cd vacall ; $(AUTOCONF) --include=../

trampoline/configure : trampoline/configure.in $(AUTOCONF_FILES)
	cd trampoline ; $(AUTOCONF) --include=../

callback/configure : callback/configure.in $(AUTOCONF_FILES)
	cd callback ; $(AUTOCONF) --include=../

callback/vacall_r/configure : callback/vacall_r/configure.in $(AUTOCONF_FILES)
	cd callback/vacall_r ; $(AUTOCONF) --include=../../

callback/trampoline_r/configure : callback/trampoline_r/configure.in $(AUTOCONF_FILES)
	cd callback/trampoline_r ; $(AUTOCONF) --include=../../

check-configures : $(CONFIGURES)
	set -e; for f in $(CONFIGURES); do bash -x -n $$f; done
	rm -rf `find . -name $(AUTOCONF_CACHE)`;

avcall/avcall.h.msvc : avcall/avcall.h.in
	cd avcall ; $(MAKE) -f Makefile.devel avcall.h.msvc

avcall/avcall.h.mingw32 : avcall/avcall.h.in
	cd avcall ; $(MAKE) -f Makefile.devel avcall.h.mingw32

avcall/avcall-i386-msvc.c : avcall/avcall-i386-macro.S avcall/asmi386.sh
	cd avcall ; $(MAKE) -f Makefile.devel avcall-i386-msvc.c

avcall/avcall-i386-mingw32.c : avcall/avcall-i386-macro.S avcall/asmi386.sh
	cd avcall ; $(MAKE) -f Makefile.devel avcall-i386-mingw32.c

vacall/config.h.msvc : vacall/config.h.in
	cd vacall ; $(MAKE) -f Makefile.devel config.h.msvc

vacall/config.h.mingw32 : vacall/config.h.in
	cd vacall ; $(MAKE) -f Makefile.devel config.h.mingw32

vacall/vacall.h.msvc : vacall/vacall.h.in
	cd vacall ; $(MAKE) -f Makefile.devel vacall.h.msvc

vacall/vacall.h.mingw32 : vacall/vacall.h.in
	cd vacall ; $(MAKE) -f Makefile.devel vacall.h.mingw32

vacall/vacall-i386-msvc.c : vacall/vacall-i386-macro.S vacall/asmi386.sh
	cd vacall ; $(MAKE) -f Makefile.devel vacall-i386-msvc.c

vacall/vacall-i386-mingw32.c : vacall/vacall-i386-macro.S vacall/asmi386.sh
	cd vacall ; $(MAKE) -f Makefile.devel vacall-i386-mingw32.c

trampoline/config.h.msvc : trampoline/config.h.in
	cd trampoline ; $(MAKE) -f Makefile.devel config.h.msvc

trampoline/config.h.mingw32 : trampoline/config.h.in
	cd trampoline ; $(MAKE) -f Makefile.devel config.h.mingw32

callback/vacall_r/config.h.msvc : callback/vacall_r/config.h.in
	cd callback ; $(MAKE) -f Makefile.devel vacall_r/config.h.msvc

callback/vacall_r/config.h.mingw32 : callback/vacall_r/config.h.in
	cd callback ; $(MAKE) -f Makefile.devel vacall_r/config.h.mingw32

callback/vacall_r/vacall_r.h.msvc : callback/vacall_r/vacall_r.h.in
	cd callback ; $(MAKE) -f Makefile.devel vacall_r/vacall_r.h.msvc

callback/vacall_r/vacall_r.h.mingw32 : callback/vacall_r/vacall_r.h.in
	cd callback ; $(MAKE) -f Makefile.devel vacall_r/vacall_r.h.mingw32

callback/vacall_r/vacall-i386-msvc.c : callback/vacall_r/vacall-i386-macro.S callback/vacall_r/asmi386.sh
	cd callback ; $(MAKE) -f Makefile.devel vacall_r/vacall-i386-msvc.c

callback/vacall_r/vacall-i386-mingw32.c : callback/vacall_r/vacall-i386-macro.S callback/vacall_r/asmi386.sh
	cd callback ; $(MAKE) -f Makefile.devel vacall_r/vacall-i386-mingw32.c

callback/trampoline_r/config.h.msvc : callback/trampoline_r/config.h.in
	cd callback ; $(MAKE) -f Makefile.devel trampoline_r/config.h.msvc

callback/trampoline_r/config.h.mingw32 : callback/trampoline_r/config.h.in
	cd callback ; $(MAKE) -f Makefile.devel trampoline_r/config.h.mingw32

COMPILERS="cc -O" "gcc -freg-struct-return" "gcc -fpcc-struct-return"

multibuild : force
	for compiler in $(COMPILERS) ; do \
	  dir=build-`echo $$compiler | sed -e 's, ,,g' -e 's,/,_,g'`; \
	  mkdir $$dir; cd $$dir; \
	  CC="$$compiler" ../configure --srcdir=.. && make && make check; \
	  cd ..; \
	done

force :

