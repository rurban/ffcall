@ Generated by gcc 2.6.3 for ARM/RISCiX
rfp	.req	r9
sl	.req	r10
fp	.req	r11
ip	.req	r12
sp	.req	r13
lr	.req	r14
pc	.req	r15
gcc2_compiled.:
___gnu_compiled_c:
.text
	.align	0
LC0:
	.word	L49
	.align	0
	.global	___builtin_avcall
___builtin_avcall:
	@ args = 0, pretend = 0, frame = 1024
	@ frame_needed = 0, current_function_anonymous_args = 0
	stmfd	sp!, {r4, lr}
	mov	ip, #4
	sub	sp, sp, #1024
	mov	r4, r0
	ldr	r3, [r4, #20]
	sub	r3, r3, #32
	rsb	r3, r4, r3
	mov	r0, r3, asr #2
	cmp	ip, r0
	bge	L3
	add	r1, r4, #16
	add	r2, sp, #16
L5:
	ldr	r3, [r1, #32]
	add	r1, r1, #4
	str	r3, [r2, #-16]
	add	ip, ip, #1
	cmp	ip, r0
	add	r2, r2, #4
	blt	L5
L3:
	ldr	r0, [r4, #32]
	ldr	r3, [r4, #44]
	ldr	r2, [r4, #40]
	ldr	r1, [r4, #36]
	mov	lr, pc
	ldr	pc, [r4, #0]
	mov	ip, r0
	ldr	r2, [r4, #12]
	cmp	r2, #16
	bhi	L7
	ldr	r3, [pc, #LC0 - . - 8]
	ldr	pc, [r3, r2, asl #2]	@ table jump, label L49
L49:
	.word	L43
	.word	L7
	.word	L41
	.word	L41
	.word	L41
	.word	L42
	.word	L42
	.word	L43
	.word	L43
	.word	L43
	.word	L43
	.word	L44
	.word	L44
	.word	L21
	.word	L22
	.word	L43
	.word	L24
L21:
	ldr	r3, [r4, #8]
	str	r0, [r3, #0]	@ float
	b	L7
L22:
	ldr	r3, [r4, #8]
	stmia	r3, {r0, r1}	@ double
	b	L7
L24:
	ldr	r3, [r4, #4]
	tst	r3, #1
	beq	L25
	ldr	r3, [r4, #16]
	cmp	r3, #2
	beq	L28
	bhi	L37
	cmp	r3, #1
	beq	L27
	b	L31
L37:
	cmp	r3, #4
	beq	L29
	cmp	r3, #8
	beq	L30
	b	L31
L27:
	ldr	r2, [r4, #8]
	ldrb	r3, [ip, #0]
	strb	r3, [r2, #0]
	b	L7
L28:
	ldr	r2, [r4, #8]
	ldr	r3, [ip, #0]	@ movhi
	strb	r3, [r2, #0]
	mov	r3, r3, asr #8
	strb	r3, [r2, #1]
	b	L7
L29:
	ldr	r2, [r4, #8]
	ldr	r3, [ip, #0]
	str	r3, [r2, #0]
	b	L7
L30:
	ldr	r2, [r4, #8]
	ldr	r3, [ip, #0]
	str	r3, [r2, #0]
	ldr	r2, [r4, #8]
	ldr	r3, [ip, #4]
	str	r3, [r2, #4]
	b	L7
L31:
	ldr	r3, [r4, #16]
	add	r3, r3, #3
	mov	r1, r3, lsr #2
	sub	r1, r1, #1
	cmp	r1, #0
	blt	L7
L34:
	ldr	r2, [r4, #8]
	ldr	r3, [ip, r1, asl #2]
	str	r3, [r2, r1, asl #2]
	sub	r1, r1, #1
	cmp	r1, #0
	bge	L34
	b	L7
L25:
	tst	r3, #512
	beq	L7
	ldr	r3, [r4, #16]
	cmp	r3, #2
	beq	L42
	bhi	L47
	cmp	r3, #1
	beq	L41
	b	L7
L47:
	cmp	r3, #4
	beq	L43
	cmp	r3, #8
	beq	L44
	b	L7
L41:
	ldr	r3, [r4, #8]
	strb	ip, [r3, #0]
	b	L7
L42:
	ldr	r2, [r4, #8]
	strb	ip, [r2, #0]
	mov	r3, ip, asr #8
	strb	r3, [r2, #1]
	b	L7
L43:
	ldr	r3, [r4, #8]
	str	ip, [r3, #0]
	b	L7
L44:
	ldr	r3, [r4, #8]
	str	ip, [r3, #0]
	ldr	r3, [r4, #8]
	str	r1, [r3, #4]
L7:
	mov	r0, #0
	add	sp, sp, #1024
	ldmfd	sp!, {r4, pc}^
